@using IssueTracker.Models.ViewModels
@using IssueTracker.Services.Interfaces
@using Microsoft.AspNetCore.Identity
@using IssueTracker.Models.Enums

@model ProjectViewModel

@inject UserManager<ITUser> UserManager
@inject IITFileService FileService

@{
	ITUser user = await UserManager.GetUserAsync(User);
	bool currentUserIsProjectManager = (Model.ProjectManager is not null && Model.ProjectManager.Id == user.Id);

	string activeOrArchived = Model.Project.Archived ? "Archived" : "Active";
}

<div class="pagetitle">
	<h1>View Project: @Model.Project.Name</h1>
	<nav>
		<ol class="breadcrumb">
			<li class="breadcrumb-item">Projects</li>
			<li class="breadcrumb-item">@activeOrArchived</li>
			<li class="breadcrumb-item active">@Model.Project.Name</li>
		</ol>
	</nav>
</div>

<div class="row">

	<!-- Project Info Card -->
	<div class="col-lg-2 mb-3 mb-lg-0">
		@if (Model.Project.FileData is not null)
		{
			<img src="data:image/*;base64,@Convert.ToBase64String(Model.Project.FileData)" class="img-fluid" width="225" height="225" />
		}
		else
		{
			<img src="~/img/noImage.png" class="img-fluid" width="225" height="225"/>
		}

		@if (Model.Project.Archived)
		{
			<div class="d-flex justify-content-start mt-2">
				<p class="text-danger">Project is currently archived. Unarchive it to make changes.</p>
			</div>
		}
	</div>
	<div class="col-lg-5">
			<div class="card">
				<div class="card-header">
					<h5 class="card-text">Project Info: <strong>@Model.Project.Name</strong></h5>
					<div class="row d-flex justify-content-start">
						<div class="col">
							@if (User.IsInRole(nameof(Roles.Admin)) || currentUserIsProjectManager)
							{
								@if (!Model.Project.Archived)
								{
									<a class="btn btn-sm btn-outline-info mt-2" asp-controller="Project" asp-action="Edit" asp-route-projectId="@Model.Project.Id" title="Edit"><i class="bi bi-pencil-fill"></i></a>
									<a class="btn btn-sm btn-outline-warning mt-2 ms-2" asp-controller="Project" asp-action="Archive" asp-route-projectId="@Model.Project.Id" title="Archive"><i class="bi bi-archive"></i></a>
								}
								else
								{
									<a class="btn btn-sm btn-outline-warning mt-2 ms-2" asp-controller="Project" asp-action="Restore" asp-route-projectId="@Model.Project.Id" title="Unarchive"><i class="bi bi-archive"></i></a>
								}
							}
							@if (User.IsInRole(nameof(Roles.Admin)))
							{
								<a class="btn btn-sm btn-outline-danger mt-2  ms-2" asp-controller="Project" asp-action="Delete" asp-route-projectId="@Model.Project.Id" title="Delete"><i class="bi bi-trash"></i></a>
							}
					</div>
					</div>
				</div>
				<div class="card-body">

					<p class="card-text mt-3">
						<strong>Description:</strong><br/><br/>
						@Model.Project.Description
					</p>

					<div class="d-flex">

						<div class="col">
							<p class="card-text"><strong>Created:</strong>
							<br/>@Model.Project.StartDate.Date.ToShortDateString()
							</p>
						</div>
					
						<div class="col">
							<p class="card-text"><strong>Deadline:</strong>
							<br/>@Model.Project.EndDate.Date.ToShortDateString()
							</p>
						</div>
					
					</div>

					@{
						float daysRemaining = (Model.Project.EndDate - DateTime.Now).Days;
						float daysUsed = (DateTime.Now - Model.Project.StartDate).Days;
						float totalDays = (Model.Project.StartDate - Model.Project.StartDate).Days;
						float percentComplete = daysRemaining > 0 ? (daysUsed / totalDays) * 100 : 100;
					}

					<p class="card-text mt-3 @(daysRemaining <= 0 ? "text-danger" : "")">@(daysRemaining > 0 ? $"{daysRemaining.ToString()} days remaining" : "Project is due!")</p>
					<div class="progress mt-0">
						<div class="progress-bar progress-bar-striped" role="progressbar" style="width: @(percentComplete)%" aria-valuenow="@percentComplete" aria-valuemin="0" aria-valuemax="100"></div>
					</div>
				</div>
			</div>

	</div>

	<!-- Project Team Card -->
	<div class="col-lg-5">
		<div class="card">
				<div class="card-header">
					<h5 class="card-text">Project Team</h5>
				</div>
				<div class="card-body">

					<!-- Project Manager -->
					<p class="card-text mt-3"><strong>Project Manager:</strong></p>
					<div class="d-flex">
						@if (Model.ProjectManager is null)
						{
							<div class="flex-shrink-0">
								<img src="~/img/defaultUser.png" class="rounded-circle" width="50" height="50">
							</div>
							<div class="flex-grow-1 align-self-center">
								<p class="card-text text-danger fw-bold ms-3">Unassigned!</p>
						</div>
					}
					else
					{
						<div class="flex-shrink-0">
							@if (Model.ProjectManager.AvatarFileData is not null)
							{
								<img src="data:image/*;base64,@(Convert.ToBase64String(Model.ProjectManager.AvatarFileData))" class="rounded-circle" width="50" height="50">
							}
							else
							{
								<img src="~/img/defaultUser.png" class="rounded-circle" width="50" height="50">
							}
						</div>
							<div class="flex-grow-1 align-self-center">
								<p class="card-text ms-3"><a asp-controller="Company" asp-action="ViewMember" asp-route-userId="@Model.ProjectManager.Id">@Model.ProjectManager.FullName</a></p>
							</div>
						}
					</div>
				
					<hr />

					<!-- Developers -->
					<p class="card-text mt-3"><strong>Developers:</strong></p>
					@if (Model.Developers.Count == 0)
					{
						<p class="card-text">No developers are assigned to this project.</p>
					}
					@foreach (ITUser developer in Model.Developers)
					{
						<div class="d-flex mt-2 mb-2">
							<div class="flex-shrink-0">
								@if (developer.AvatarFileData != null)
								{
									<img src="data:image/*;base64,@(Convert.ToBase64String(developer.AvatarFileData))" class="rounded-circle" width="50" height="50">
								}
								else
								{
									<img src="~/img/defaultUser.png" class="rounded-circle" width="50" height="50">
								}
							</div>
							<div class="flex-grow-1 align-self-center">
								<p class="card-text ms-3"><a asp-controller="Company" asp-action="ViewMember" asp-route-userId="@developer.Id">@developer.FullName</a></p>
							</div>
						</div>
					}

					<hr/>

					<!-- Members -->
					<p class="card-text mt-3"><strong>Submitters:</strong></p>
					@if (Model.Submitters.Count == 0)
					{
						<p class="card-text">No submitters are assigned to this project.</p>
					}
					@foreach (ITUser submitter in Model.Submitters)
					{
						<div class="d-flex">
							<div class="flex-shrink-0">
								@if (submitter.AvatarFileData is not null)
								{
									<img src="data:image/*;base64,@(Convert.ToBase64String(submitter.AvatarFileData))" class="rounded-circle" width="50" height="50">
								}
								else
								{
									<img src="~/img/defaultUser.png"  class="rounded-circle" width="50" height="50">
								}
							</div>
							<div class="flex-grow-1 align-self-center">
								<p class="card-text ms-3"><a asp-controller="Company" asp-action="ViewMember" asp-route-userId="@submitter.Id">@submitter.FullName</a></p>
							</div>
						</div>
					}

				</div>
		</div>
	</div>

	<!-- Active Tickets Card -->
	<div class="col-12">
		
		<div class="card">
			<div class="card-header">
				<h5 class="card-text d-inline">Active Tickets</h5>
				@if (!Model.Project.Archived && (User.IsInRole(nameof(Roles.Admin)) || User.IsInRole(nameof(Roles.ProjectManager)) || User.IsInRole(nameof(Roles.Developer))))
				{
					<a class="btn btn-sm btn-success mb-3 d-inline ms-3" asp-controller="Ticket" asp-action="Create" asp-route-projectId="@Model.Project.Id">Create Ticket</a>
				}
			</div>

			<div class="card-body">
					@if (Model.Tickets.Where(t => t.TicketStatus.Name != "Resolved" && !t.Archived).Count() == 0)
					{
						<p class="card-text text-center mt-2">There are no active tickets.</p>
					}
					else
					{
						<div class="table-responsive">
							<table class="table table-sm table-bordered table-light mt-4">

								<colgroup>
									<col width="350">
									<col width="150">
									<col width="300">
									<col width="150">
									<col width="150">
									<col width="150">
								</colgroup>

								<thead class="table-light">
									<tr>
										<th>Ticket</th>
										<th class="text-center">Created</th>
										<th class="text-center">Assigned Developer</th>
										<th class="text-center">Priority</th>
										<th class="text-center">Type</th>
										<th class="text-center">Status</th>
									</tr>
								</thead>

								<tbody>
										@foreach (Ticket ticket in Model.Tickets)
										{
											if (ticket.TicketStatus.Name != "Resolved" && !ticket.Archived)
											{
												<tr class="align-middle">
													<td>
														<a asp-controller="Ticket" asp-action="Details" asp-route-ticketId="@ticket.Id">
															<i class="bi bi-ticket-detailed-fill"></i>
															<p class="text-primary d-inline">@ticket.Title</p>
														</a>
													</td>
													<td class="text-center">@ticket.Created.Date.ToShortDateString()</td>
													<td class="@Model.GetDeveloperTextFormat(ticket) text-center">
														@(ticket.DeveloperUser != null ? ticket.DeveloperUser.FullName : "Unassigned!")
													</td>
													<td class="text-center"><span class="badge @Model.GetPriorityBadgeFormat(ticket)">@ticket.TicketPriority!.Name</span></td>
													<td class="text-center">@ticket.TicketType!.Name</td>
													<td class="text-center"><span class="@Model.GetStatusTextFormat(ticket)">@ticket.TicketStatus!.Name</span></td>
												</tr>
											}	
										}
								</tbody>

							</table>
						</div>
					}
			</div>
		</div>
	</div>

	<!-- Completed Tickets Card -->
	<div class="col-12">

		<div class="card">
			<div class="card-header">
				<h5 class="card-text d-inline">Completed Tickets</h5>
			</div>

			<div class="card-body">

				@if (Model.Tickets.Where(t => t.TicketStatus.Name == "Resolved" && !t.Archived).Count() == 0)
				{
					<p class="card-text text-center mt-2">
						There are no completed tickets (or they've all been archived).
					</p>
				}
				else
				{
					<div class="table-responsive">

						<table class="table table-sm table-bordered table-light mt-4">

							<colgroup>
								<col width="350">
								<col width="150">
								<col width="300">
								<col width="150">
								<col width="150">
								<col width="150">
							</colgroup>
						
							<thead class="table-light">
								<tr>
									<th>Ticket</th>
									<th class="text-center">Created</th>
									<th class="text-center">Assigned Developer</th>
									<th class="text-center">Priority</th>
									<th class="text-center">Type</th>
									<th class="text-center">Status</th>
								</tr>
							</thead>

							<tbody>
								@foreach (Ticket ticket in Model.Tickets)
								{
									if (ticket.TicketStatus.Name == "Resolved" && !ticket.Archived)
									{
										<tr class="align-middle">
											<td>
												<a asp-controller="Ticket" asp-action="Details" asp-route-ticketId="@ticket.Id">
													<i class="bi bi-ticket-detailed-fill"></i>
													<p class="text-primary d-inline">@ticket.Title</p>
												</a>
											</td>
											<td class="text-center">@ticket.Created.Date.ToShortDateString()</td>
											<td class="text-center @Model.GetDeveloperTextFormat(ticket)">@(ticket.DeveloperUser != null ? ticket.DeveloperUser.FullName : "")</td>
											<td class="text-center"><span class="badge @Model.GetPriorityBadgeFormat(ticket)">@ticket.TicketPriority!.Name</span></td>
											<td class="text-center">@ticket.TicketType!.Name</td>
											<td class="text-center"><span class="@Model.GetStatusTextFormat(ticket)">@ticket.TicketStatus!.Name</span></td>
										</tr>
									}
								}
							</tbody>

						</table>

					</div>
				}
			</div>
		</div>
	</div>

	<!-- Archived Tickets Card -->
	<div class="col-12">

		<div class="card">
			<div class="card-header">
				<h5 class="card-text d-inline">Archived Tickets</h5>
			</div>

			<div class="card-body">
				@if (Model.Tickets.Where(t => t.Archived).Count() == 0)
				{
					<p class="card-text text-center mt-2">
						There are no archived tickets.
					</p>
				}
				else
				{
					<div class="table-responsive">

						<table class="table table-sm table-bordered table-light mt-4">

							<thead class="table-light">
								<tr>
									<th>Ticket</th>
								</tr>
							</thead>

							<tbody>
									@foreach (Ticket ticket in Model.Tickets)
									{
										if (ticket.Archived)
										{
											<tr class="align-middle">
												<td>
													<a class="text-muted" asp-controller="Ticket" asp-action="Details" asp-route-ticketId="@ticket.Id">
														<i class="bi bi-ticket-detailed-fill"></i>
														<p class="text-muted d-inline">@ticket.Title</p>
													</a>
												</td>
											</tr>
										}
									}
							</tbody>

						</table>
					</div>
				}
			</div>
		</div>
	</div>
</div>


@* @using IssueTracker.Models.Enums *@
@* @using IssueTracker.Services.Interfaces *@
@* @using Microsoft.AspNetCore.Identity *@
@* @using IssueTracker.Extensions *@
@* *@
@* @model IssueTracker.Models.Project *@
@* *@
@* @inject UserManager<ITUser> UserManager *@
@* @inject IITProjectService ProjectService *@
@* @inject IITTicketHistoryService HistoryService *@
@* *@
@* @{ *@
@*     ViewData["Title"] = "Details"; *@
@*     Layout = "~/Views/Shared/_Layout.cshtml"; *@
@*      *@
@*     ITUser itUser = await UserManager.GetUserAsync(User); *@
@*     ITUser projectManager = await ProjectService.GetProjectManagerAsync(Model.Id); *@
@* } *@
@* *@
@* <h1>Details</h1> *@
@* *@
@* <div> *@
@*     <div class="container-fluid"> *@
@*         <div class="row gy-2"> *@
@*             <div class="col-md-12 col"> *@
@*                 <div class="row col-cols-2 mt-5 bg-secondary"> *@
@*                     <div class="card col m-1 p-2"> *@
@*                         <div class="body"> *@
@*                             $1$ Project Name #1# *@
@*                             <h5>@Model.Name</h5> *@
@*                             $1$ Project Description #1# *@
@*                             <p>@Model.Description</p> *@
@*                             <div class="progress-container progress-info m-b-25"> *@
@*                                 <span class="progress-badge" style="font-size:small"></span> *@
@*                                 <div class="progress"> *@
@*                                     @{ *@
@*                                         var start = Model.StartDate.DateTime; *@
@*                                         var end = Model.EndDate.DateTime; *@
@*                                         var today = DateTime.Now; *@
@*                                         var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100); *@
@*                                          *@
@*                                     } *@
@*                                     <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: @percent%;"> *@
@*                                         <span class="progress-value">@percent%</span> *@
@*                                     </div> *@
@*                                 </div> *@
@*                             </div> *@
@*                         </div> *@
@*                     </div> *@
@*                     <div class="card col m-1 p-2"> *@
@*                         <div class="body"> *@
@*                             <ul class=" list-unstyled basic-list"> *@
@*                                 <li>Start Date: <span class="">@Model.StartDate.ToString("dd MMM, yyyy")</span></li> *@
@*                                 <li>Deadline: <span class="">@Model.EndDate.ToString("dd MMM, yyyy")</span></li> *@
@*                                 <li>Priority: <span class="">@Model.ProjectPriority?.Name</span></li> *@
@*                                 @if (today < end && today >= start) *@
@*                                 { *@
@*                                     <li>Status: <span class="">Active</span></li> *@
@*                                 } *@
@*                                 else *@
@*                                 { *@
@*                                     <li>Status: <span class="">Inactive</span></li> *@
@*                                 } *@
@*                             </ul> *@
@*                         </div> *@
@*                     </div> *@
@*                 </div> *@
@*             </div> *@
@*             <div class="col-md-4 col mt-5 "> *@
@*                 <div class="bg-secondary"> *@
@*                     <div class="card m-1 p-2"> *@
@*                         <div class="header"> *@
@*                             <h2>Project Manager</h2> *@
@*                             <hr /> *@
@*                         </div> *@
@*                         <div class="body" style="overflow-y:auto;height:300px;"> *@
@*                             @if (projectManager != null) *@
@*                             { *@
@*                                 <div> *@
@*                                     @if (projectManager.AvatarFileData != null) *@
@*                                     { *@
@*                                         <img class="rounded-circle" src="data:img/*;base64,@Convert.ToBase64String(projectManager.AvatarFileData)" alt="" /> *@
@*                                     } *@
@*                                     else *@
@*                                     { *@
@*                                         <img class="rounded-circle" style="width:60px;height:60px" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" /> *@
@*                                     } *@
@*                                     <div> *@
@*                                         <h5>@projectManager.FullName</h5> *@
@*                                         <span>@projectManager.Email</span> *@
@*                                         <p class="text-muted m-b-0">Project Manager</p> *@
@*                                         @if (User.IsInRole(nameof(Roles.Admin)) || (itUser.Id == projectManager.Id)) *@
@*                                         { *@
@*                                             <a class="btn btn-xs alert-primary" style="font-size:small" asp-action="AssignMembers" asp-controller="Project" asp-route-ProjectId="@Model.Id">Manage Team</a> *@
@*                                         } *@
@*                                     </div> *@
@*                                 </div> *@
@*                             } *@
@*                             else *@
@*                             { *@
@*                                 <div> *@
@*                                     <img class="rounded-circle" style="width:60px;height:60px" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" /> *@
@*                                     <div class="wid-u-info"> *@
@*                                         <h5 class="text-muted m-b-0">Not Assigned</h5> *@
@*                                         @if (User.IsInRole(nameof(Roles.Admin))) *@
@*                                         { *@
@*                                             <span><a asp-action="AssignProjectManager" asp-controller="Project" asp-route-id="@Model.Id" class="btn btn-xs btn-outline-info">Add Project Manager</a></span>   *@
@*                                         } *@
@* *@
@*                                     </div> *@
@*                                 </div> *@
@*                             } *@
@*                         </div> *@
@*                     </div> *@
@*                 </div> *@
@*             </div> *@
@*             <div class="col-md-4 col mt-5 "> *@
@*                 <div class="bg-secondary"> *@
@*                     <div class="card m-1 p-2"> *@
@*                         <div class="header"> *@
@*                             <h2>Project Team</h2> *@
@*                             <hr /> *@
@*                         </div> *@
@*                         <div class="body" style="overflow-y:auto;height:300px;"> *@
@*                             <ul class="right_chat list-unstyled mb-0"> *@
@*                                 @foreach (ITUser member in await ProjectService.GetAllProjectMembersExceptPMAsync(Model.Id)) *@
@*                                 { *@
@*                                     <li class=""> *@
@*                                         <a href=""> *@
@*                                             <div class="media"> *@
@*                                                 @if (member.AvatarFileData != null) *@
@*                                                 { *@
@*                                                     <img class="" src="data:image/*;base64,@(Convert.ToBase64String(member.AvatarFileData))" alt=""/>  *@
@*                                                 } *@
@*                                                 else *@
@*                                                 { *@
@*                                                     <img  style="width:30px;height:30px" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" /> *@
@*                                                 } *@
@*                                             </div> *@
@*                                         </a> *@
@*                                         <div> *@
@*                                             <span class="">@member.FullName</span> *@
@*                                             <span class="" style="font-size:x-small">[@((await UserManager.GetRolesAsync(member)).FirstOrDefault())]</span> *@
@*                                         </div> *@
@*                                     </li> *@
@*                                 } *@
@*                             </ul> *@
@*                         </div> *@
@*                     </div> *@
@*                 </div> *@
@*             </div> *@
@*             <div class="col-md-4 col mt-5 "> *@
@*                 <div class="bg-dark"> *@
@*                     <div class="card m-1 p-2"> *@
@*                         <div class="header"> *@
@*                             <h2>Project Activity</h2> *@
@*                             <hr /> *@
@*                         </div> *@
@*                         <div class="body" style="overflow-y:auto;height:300px;background-color:antiquewhite"> *@
@*                             $1$ Project Activity loop #1# *@
@*                             @foreach (TicketHistory history in await HistoryService. (Model.Id, itUser.CompanyId.Value)) *@
@*                             { *@
@*                                 <div> *@
@*                                     <span class="date">@history.Created.ToString("dd MMM yyyy")</span> *@
@*                                     <h6>@history.Description</h6> *@
@*                                     <span>By: <a href="" title="@history.User.FullName">@history.User.FullName"</a></span> *@
@*                                     <div class=""> *@
@*                                         <p>The ticket <b>@history.Property </b> was edited</p> *@
@*                                         <p>@($"Previous {history.Property}: {history.OldValue}")</p> *@
@*                                         <p>@($"Previous {history.Property}: {history.NewValue}")</p> *@
@*                                     </div> *@
@*                                 </div> *@
@*                             } *@
@*                         </div> *@
@*                     </div> *@
@*                 </div> *@
@*             </div> *@
@*             <div class="col-md-12 col"> *@
@*                 <div class="mt-5 bg-secondary"> *@
@*                     <div class="card m-1 p-2"> *@
@*                         <div class="header"> *@
@*                             <h2>Tickets</h2> *@
@*                         </div> *@
@*                         <div class="body"> *@
@*                             <div class="table-responsive" style="overflow-y:auto;height:600px;"> *@
@*                                 <table class="table table-hover"> *@
@*                                     <thead class=""> *@
@*                                         <tr> *@
@*                                             <th>Title</th> *@
@*                                             <th>Developer</th> *@
@*                                             <th>Status</th> *@
@*                                             <th>Priority</th> *@
@*                                             <th>Date</th> *@
@*                                             <th>Action</th> *@
@*                                         </tr> *@
@*                                     </thead> *@
@*                                     <tbody> *@
@*                                       @foreach (var ticket in Model.Tickets.OrderByDescending(d => d.Created)) *@
@*                                       { *@
@*                                           <tr> *@
@*                                               <td><a asp-action="Details" asp-controller="Ticket" asp-route-id="@ticket.Id" style="color:black"><strong>@ticket.Title</strong></a> </td> *@
@*                                               <td> *@
@*                                                   @if (ticket.DeveloperUserId != null) *@
@*                                                   { *@
@*                                                       @ticket.DeveloperUser?.FullName *@
@*                                                   } *@
@*                                                   else *@
@*                                                   { *@
@*                                                       if (User.IsInRole(nameof(Roles.Admin)) || User.IsInRole(nameof(Roles.ProjectManager))) *@
@*                                                       { *@
@*                                                           <a class="btn btn-xs btn-info" asp-action="AssignDeveloper" asp-controller="Ticket" asp-route-ticketId="@ticket.Id">Assign Dev</a> *@
@*                                                       } *@
@* *@
@*                                                   } *@
@*                                               </td> *@
@*                                               @if (ticket.TicketStatus.Name == "New") *@
@*                                               { *@
@*                                                   <td><span class="badge-success">@ticket.TicketStatus.Name </span></td> *@
@* *@
@*                                               } *@
@*                                               else *@
@*                                               { *@
@*                                                   <td><span class="badge-primary">@ticket.TicketStatus.Name </span></td> *@
@*                                               } *@
@*                                               <td><span class="badge-warning">@ticket.TicketPriority.Name </span></td> *@
@*                                               <td>@ticket.Created.ToString("dd-MM-yyyy")</td> *@
@*                                               <td> *@
@*                                                   <a class="btn btn-sm btn-outline-info" asp-action="Details" asp-controller="Ticket" asp-route-id="@ticket.Id"><i class="fs-5 bi-justify"></i></a> *@
@*                                                   @if (ticket.DeveloperUserId == itUser.Id || ticket.OwnerUserId == itUser.Id || (projectManager?.Id == itUser.Id) || User.IsInRole(nameof(Roles.Admin))) *@
@*                                                   { *@
@*                                                       <a class="btn btn-sm btn-outline-secondary" asp-action="Edit" asp-controller="Ticket" asp-route-id="@ticket.Id"><i class="fs-5 bi-pencil"></i></a> *@
@*                                                   } *@
@* *@
@*                                                   @if (User.IsInRole(nameof(Roles.Admin)) || (projectManager?.Id == itUser.Id)) *@
@*                                                   { *@
@*                                                       <a class="btn btn-sm btn-outline-danger"><i class="fs-5 bi-archive"></i></a> *@
@*                                                   } *@
@*                                               </td> *@
@*                                           </tr> *@
@*                                       } *@
@*                                     </tbody> *@
@*                                 </table> *@
@*                             </div> *@
@*                         </div> *@
@*                     </div> *@
@*                 </div> *@
@*             </div> *@
@*         </div> *@
@*     </div> *@
@* </div> *@
