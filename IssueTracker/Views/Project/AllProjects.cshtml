@using IssueTracker.Models.Enums
@using IssueTracker.Services.Interfaces
@using Microsoft.AspNetCore.Identity
@model IEnumerable<IssueTracker.Models.Project>

@inject UserManager<ITUser> UserManager
@inject IITProjectService ProjectService

@{
    ViewData["Title"] = "All Projects";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ITUser itUser = await UserManager.GetUserAsync(User);
}

<h1>All Projects</h1>
@* Note we could write Roles.Admin.ToString() as well *@
@if (User.IsInRole(nameof(Roles.Admin)) || User.IsInRole(nameof(Roles.ProjectManager)))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FileName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FileData)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Company)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectPriority)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Archived)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FileName)
            </td>
            <td>
                @if (item.FileData != null)
                {
                    <img style="width:60px;height: 60px" src="data:image/*;base64,@(Convert.ToBase64String(item.FileData))" alt="project image"/>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Company.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProjectPriority.Name)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                @{
                    bool isProjectPM = (await ProjectService.GetProjectManagerAsync(item.Id))?.Id == itUser.Id;
                }
                @if ( User.IsInRole(nameof(Roles.Admin)) || isProjectPM )
                {
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> 
                    
                    @if (item.Archived)
                    {
                        <a asp-action="Restore" asp-route-id="@item.Id">Restore</a>
                    }
                    else
                    {
                        <a asp-action="Archive" asp-route-id="@item.Id">Archive</a>
                    }
                }
            </td>
        </tr>
}
    </tbody>
</table>
